#include "iostream"
using namespace std;

// Function to find the maximum element in the array
int maxElement(int arr[], int size)
{
    int max = arr[0];
    for(int i = 1; i < size; i++)
    {
        if(arr[i] > max)
        {
            max = arr[i];
        }
    }
    return max;
}

// Function to print the array
void printArray(int arr[], int size)
{
    cout << "\n[";
    for(int i = 0; i < size; i++)
    {
        cout << arr[i] << ",";
    }
    cout << "]";
}

// Function to sort the array using count sort algorithm
void countSort(int arr[], int size)
{
    int max = maxElement(arr, size) + 1;
    int count[max];
    int sec[size];

    // Initialize count array
    for(int i = 0; i < max; i++)
    {
        count[i] = 0;
    }

    // Store count of each element
    for(int i = 0; i < size; i++)
    {
        count[arr[i]]++;
    }

    // Change count[i] so that count[i] now contains actual position of this element in output array
    for(int i = 1; i < max; i++)
    {
        count[i] += count[i - 1];
    }

    // Build the output array
    for(int i = size - 1; i >= 0; i--)
    {
        sec[--count[arr[i]]] = arr[i];
    }

    // Copy the sorted elements into original array
    for(int i = 0; i < size; i++)
    {
        arr[i] = sec[i];
    }
}

int main()
{
    int arr[6] = {2, 3, 0, 2, 3, 2};
    int size = sizeof(arr) / sizeof(arr[0]);

    cout << "Size of array: " << size;
    cout << "\nOriginal array:";
    printArray(arr, size);

    countSort(arr, size);

    cout << "\nSorted array:";
    printArray(arr, size);

    return 0;
}
